<span-description class='f_sans'>
https://leetcode.com/problems/kth-smallest-element-in-a-bst/
Kth Smallest Element in a BST
Given the <u>root</u> of a binary search tree, and an integer <u>k</u>, return the <u>k<sup>th</sup></u> smallest value (<b>1-indexed</b>) of all the values of the nodes in the tree.
</span-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Constraints
<ul>
<li>The number of nodes in the tree is n.</li>
<li>1 <= k <= n <= 10<sup>4</sup></li>
<li>0 <= Node.val <= 10<sup>4</sup></li>
</ul>
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_mono'>
Example 1
<href-image src='page/question/Kth_Smallest_Element_in_a_BST/1.jpg' style='width: 212px;'></href-image>
Input: root = [3, 1, 4, null, 2], k = 1
Output: 1
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Example 2
<href-image src='page/question/Kth_Smallest_Element_in_a_BST/2.jpg' style='width: 382px;'></href-image>
Input: root = [5, 3, 6, 2, 4, null, null, 1], k = 3
Output: 3
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_sans'>
Hint 1
Try to utilize the property of a BST.
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_sans'>
Hint 2
Try in-order traversal. (Credits to @chan13)
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_sans'>
Hint 3
What if you could modify the BST node's structure?
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_sans'>
Hint 4
The optimal runtime complexity is O(height of BST).
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_sans'>
Follow up
If the BST is modified often (i.e., we can do insert and delete operations) and you need to find the kth smallest frequently, how would you optimize?
</fieldset-description>