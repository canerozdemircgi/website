<span-description class='f_sans'>
https://leetcode.com/problems/missing-number/
Missing Number
Given an array <u>nums</u> containing <u>n</u> distinct numbers in the range <u>[0, n]</u>, return the only number in the range that is missing from the array.
</span-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Constraints
<ul>
<li>n == nums.length</li>
<li>1 <= n <= 10<sup>4</sup></li>
<li>0 <= nums[i] <= n</li>
<li>All the numbers of nums are unique.</li>
</ul>
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_mono'>
Example 1
Input: nums = [3, 0, 1]
Output: 2
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0, 3]. 2 is the missing number in the range since it does not appear in nums.
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Example 2
Input: nums = [0, 1]
Output: 2
Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0, 2]. 2 is the missing number in the range since it does not appear in nums.
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Example 3
Input: nums = [9, 6, 4, 2, 3, 5, 7, 0, 1]
Output: 8
Explanation: n = 9 since there are 9 numbers, so all numbers are in the range [0, 9]. 8 is the missing number in the range since it does not appear in nums.
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_sans'>
Follow up
Could you implement a solution using only O(1) extra space complexity and O(n) runtime complexity?
</fieldset-description>