<span-description class='f_sans'>
https://leetcode.com/problems/house-robber-ii/
House Robber II
You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are <b>arranged in a circle</b>. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and <b>it will automatically contact the police if two adjacent houses were broken into on the same night.</b>

Given an integer array <u>nums</u> representing the amount of money of each house, return the maximum amount of money you can rob tonight <b>without alerting the police</b>.
</span-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Constraints
<ul>
<li>1 <= nums.length <= 100</li>
<li>0 <= nums[i] <= 1000</li>
</ul>
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_mono'>
Example 1
Input: nums = [2, 3, 2]
Output: 3
Explanation: You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Example 2
Input: nums = [1, 2, 3, 1]
Output: 4
Explanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).
Total amount you can rob = 1 + 3 = 4.
</fieldset-description>

<div class='br20'></div>

<fieldset-description class='f_mono'>
Example 3
Input: nums = [1, 2, 3]
Output: 3
</fieldset-description>

<div class='br60'></div>

<fieldset-description class='f_sans'>
Hint 1
Since House[1] and House[n] are adjacent, they cannot be robbed together. Therefore, the problem becomes to rob either House[1] - House[n-1] or House[2] - House[n], depending on which choice offers more money. Now the problem has degenerated to the <a class='f_serif' onmouseover="this.href = window.location.href.replace('House_Robber_II', 'House_Robber');">House Robber</a>, which is already been solved.
</fieldset-description>